image: mxe-docker-image-win64

variables:
  #GIT_DEPTH: "1"
  GIT_STRATEGY: none

before_script:
  - cd
  - mkdir builds; cd builds
  - git clone https://github.com/luca-penasa/trunk.git cc --depth=3 -b to_vombat
  - cd cc
  - cat .gitmodules
  - git submodule update --init --depth=3
  - cd plugins/vombat
  - git submodule update --init 
  - cd spc
  - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
  - git submodule update --init --recursive
  - cd ../../../



#  - echo "${SSH_PRIVATE_KEY}" 
  # Install ssh-agent if not already installed, it is required by Docker.
  # (change apt-get to yum if you use a CentOS-based image)
#  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client expect -y )'

  # Run ssh-agent (inside the build environment)
 # - eval $(ssh-agent -s)
#
  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
#  - ssh-add -h
  # echo "-----BEGIN RSA PRIVATE KEY-----" > key.keys
  #- echo "$SSH_PRIVATE_KEY" >> key.keys
  # echo "-----END RSA PRIVATE KEY-----"  >> key.keys
  #- chmod og-xrw key.keys

  #- ssh-add key.keys


  #- ssh-add key.txt
  #- rm key.keys


  # For Docker builds disable host key checking. Be aware that by adding that
  # you are suspectible to man-in-the-middle attacks.
  # WARNING: Use this only with the Docker executor, if you use it with shell
  # you will overwrite your user's SSH config.
  #- mkdir -p ~/.ssh
  #- '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'


build-mxe:
  stage: build

  script:
    - apt-get -qq update
    - mkdir build-mxe
    - cd build-mxe
    - x86_64-w64-mingw32.shared-cmake .. -DOPTION_BUILD_CCVIEWER=OFF -DCMAKE_INSTALL_PREFIX=$HOME/ccwin
      # -DINSTALL_vombat_PLUGIN=ON         
      # -DINSTALL_QANIMATION_PLUGIN=ON
      # -DINSTALL_QBLUR_PLUGIN=ON
      # -DINSTALL_QDUMMY_PLUGIN=ON
      # -DINSTALL_QEDL_PLUGIN=ON
      # -DINSTALL_QPOISSON_RECON_PLUGIN=OFF
      # -DINSTALL_QSRA_PLUGIN=ON
      # -DINSTALL_QSSAO_PLUGIN=ON
      # -DINSTALL_QCSF_PLUGIN=ON
      # -DINSTALL_QPHOTOSCAN_IO_PLUGIN=ON
      # -DINSTALL_QM3C2_PLUGIN=ON
      # -DINSTALL_QPCV_PLUGIN=ON ..
    - make -j 8 install
    - cp ../fix_needed_dynamic_libs.py ${HOME}/ccwin
    - cd ${HOME}/ccwin
    - python fix_needed_dynamic_libs.py
    
    
  artifacts:
    paths:    
    - ${HOME}/ccwin/CloudCompare/*